######################
### KEY BINDING    ###
######################
# Set new prefix
unbind C-b
set -g prefix C-space
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -s escape-time 0

# Reload config file
unbind r
bind r source-file "$HOME/.tmux.conf" \; display "Reloaded tmux conf"

# Tmux splitting
unbind v
unbind h
unbind % # Split vertically
unbind '"' # Split horizontally
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# Resizing
bind -r - resize-pane -D 15
bind -r + resize-pane -U 15
bind -r < resize-pane -L 15
bind -r > resize-pane -R 15

# Panes navigation
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# Window config
unbind n  #DEFAULT KEY: Move to next window
unbind w  #DEFAULT KEY: change current window interactively
bind n command-prompt "rename-window '%%'"
bind w new-window -c "#{pane_current_path}"
set -g base-index 1
set-window-option -g pane-base-index 1
bind -n M-j previous-window
bind -n M-k next-window

# mouse mode
set -g mouse on

# Copy mode
set-window-option -g mode-keys vi
unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection
unbind P
# move x clipboard into tmux paste buffer
# http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/
bind P paste-buffer
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection

# Vim config
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

##############
### DESIGN ###
##############

# panes
set -g pane-border-style fg=black
set -g pane-active-border-style fg=red

## Status bar design
# status line
set -g status-justify left
#set -g status-bg default
set -g status-style fg=blue
set -g status-interval 2

# messaging
set -g message-command-style fg=blue,bg=black

# window mode
setw -g mode-style bg=green,fg=black

# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=white] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=white] #I #[fg=white]#[bg=cyan] #W "
setw -g window-status-current-style bg=black,fg=yellow,dim
setw -g window-status-style bg=green,fg=black,reverse

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set-window-option -g monitor-activity off
set -g bell-action none

# The modes
set-window-option -g clock-mode-colour red
set-window-option -g mode-style fg=red,bg=black,bold

# The panes
set -g pane-border-style bg=black,fg=black
set -g pane-active-border-style fg=blue,bg=brightblack

# The statusbar
set -g status-position bottom
set -g status-style bg=black,fg=yellow,dim
set -g status-left ''
set -g status-right '#{?client_prefix,#[fg=red]prefix pressed ..,#[fg=brightwhite]#H}'

set -g status-right-length 50
set -g status-left-length 20

# The window
set-window-option -g window-status-current-style fg=red,bg=brightblack,bold
set-window-option -g window-status-current-format ' #I#[fg=brightwhite]:#[fg=brightwhite]#W#[fg=blue]#F '

set-window-option -g window-status-style fg=magenta,bg=black,none
set-window-option -g window-status-format ' #I#[fg=colour251]:#[fg=colour251]#W#[fg=black]#F '

set-window-option -g window-status-bell-style fg=white,bg=red,bold

# The messages
set -g message-style fg=white,bg=red,bold

###############
### PLUGINS ###
###############
# List of plugins
set -g @plugin 'tmux-plugins/tpm'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b "$HOME/tmux/plugins/tpm/tpm"
